{"version":3,"sources":["Components/Notes.js","Components/Notelist.js","Components/Addnotes.js","Components/Header.js","Components/Herodiv.js","App.js","reportWebVitals.js","index.js"],"names":["Notes","items","onDelete","className","style","fontSize","color","title","cursor","size","onClick","id","text","Notelist","map","item","Addnotes","onAdd","onadd","useState","setTitle","setText","onSubmit","e","preventDefault","toast","success","icon","alert","type","value","placeholder","onChange","target","Header","togglemode","modeicon","setModeicon","previousDarkmode","Herodiv","width","height","src","frameborder","allow","App","Darkmode","setDarkmode","showform","setShowform","setItems","Math","floor","random","newNote","console","log","filter","el","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1b93c6c.chunk.js","sourcesContent":["\r\nimport {MdDeleteForever,  MdPassword} from 'react-icons/md'\r\n\r\nfunction Notes({items, onDelete}) {\r\n    return (\r\n       \r\n        <div className='cards' >\r\n\r\n        <div className='noteshead'>\r\n        <MdPassword style={{ fontSize:'80px', color:'white'}} />\r\n        </div>\r\n        <div className='herop'>\r\n        <div className='Hero'>\r\n            <h1>{items.title}</h1>\r\n             <MdDeleteForever style={{color:'red', fontSize:'20px' , cursor:'pointer'}} size='1.5em'\r\n            onClick={()=> onDelete(items.id)} />\r\n            </div> \r\n            <div className='pdiv'>\r\n            <p>{items.text}</p>\r\n            <button className='password-hide-btn'>Hide</button>\r\n                 </div>     \r\n                 </div>       \r\n            \r\n        </div>   \r\n        \r\n    )\r\n}\r\n\r\nexport default Notes\r\n","import Notes from './Notes'\r\nfunction Notelist({items, onDelete}) {\r\n    return (\r\n        <div className='NOTELIST'> \r\n    {items.map(item => (\r\n        <div id='cards' key={item.id}>\r\n        <Notes  key={item.id} items={item} onDelete={onDelete}/>\r\n      </div>\r\n      ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notelist\r\n","import { useState } from 'react'\r\nimport { MdCancel} from 'react-icons/md';\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction Addnotes({onAdd, onadd}) {\r\n     const [title, setTitle] = useState('');\r\n     const [text,setText] = useState('');\r\n\r\n  const submit = (e)=>{\r\n      e.preventDefault();\r\n\r\n      if (!text) {\r\n          alert('please add some Passwords...')\r\n          return\r\n      }\r\n\r\n      onAdd({text , title})\r\n      setTitle('');\r\n      setText('')\r\n\r\n      toast.success('Successfully saved!');\r\n    \r\n      toast('Good Job!', {\r\n        icon: 'üëè',\r\n      });  \r\n  }\r\n\r\n    return (\r\n        <div id='formadd'>\r\n        <form onSubmit={submit}  >\r\n        <div className='formhead'>\r\n        <h1>üîê Private laneüôà</h1>\r\n        <p>üü¢Your Passwords are 100% Secured with Us.‚úî</p>\r\n        </div>\r\n        <div className='inputst'>\r\n        <label>Brand</label>\r\n          <input type='text' value={title} placeholder='e.g Twitter,  facebook ...' onChange={(e) => setTitle(e.target.value)} />\r\n          <label>Type Password</label>\r\n          <textarea type='text' value={text} placeholder='Write the Passowrd Here...' onChange={(e) => setText(e.target.value)} />\r\n          <div className='formbtns'>\r\n          \r\n          <input id='btnsubmit'  type='submit' value='üîêSave' />\r\n          </div>\r\n          </div>\r\n        </form>\r\n        <MdCancel id='btncancel' style={{fontSize:'30px'}} onClick={onadd}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addnotes\r\n","\r\nimport { useState } from 'react'\r\nimport toast,{Toaster} from 'react-hot-toast';\r\n\r\nfunction Header({onAdd, togglemode}) {\r\n   const [modeicon, setModeicon] = useState(false);\r\n  \r\n\r\nconst notify = () => { \r\n  \r\n    if (modeicon !== false ) {\r\n        toast(' You are in light Mode', {\r\n            icon: 'üåû',\r\n          }); \r\n          setModeicon(!modeicon)\r\n          togglemode((previousDarkmode) => !previousDarkmode) \r\n\r\n    }else{\r\n        toast(' You are in Night Mode', {\r\n            icon: 'üåô',\r\n          });  \r\n          setModeicon(!modeicon)\r\n          togglemode((previousDarkmode) => !previousDarkmode) \r\n\r\n    }\r\n\r\n   \r\n}\r\n\r\n    return (\r\n        <div className='header'>\r\n        <h1>üîêPrivate</h1>\r\n            <button onClick={onAdd}>ADDüîê</button>\r\n         <div>\r\n      <button onClick={notify} className={`${modeicon ? 'darkmodebtn' : 'lightmodebtn'}`}   style={{fontSize:'20px'}}>{`${modeicon ? 'üåô' : 'üåû'}`}</button>\r\n      <Toaster/>\r\n\r\n    \r\n    </div>\r\n  \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Herodiv() {\r\n    return (\r\n        <div className='Hero-div'>\r\n        <iframe width=\"100%\" height=\"100%\" src=\"https://www.youtube.com/embed/Mxp2ky7WaB0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Herodiv\r\n","import { useState } from \"react\";\r\nimport Notelist from \"./Components/Notelist\";\r\nimport Addnotes from \"./Components/Addnotes\";\r\nimport Header from \"./Components/Header\";\r\nimport Herodiv from \"./Components/Herodiv\";\r\n\r\nfunction App() {\r\n  const [Darkmode, setDarkmode ] = useState(false);\r\n  const [showform , setShowform] = useState(false);\r\n  const [items, setItems]= useState([\r\n    {\r\n      title: 'Gmail',\r\n      text: '******',\r\n      id:1\r\n  \r\n    },\r\n    {\r\n      title: 'Instagram',\r\n      text: '******',\r\n      id:2\r\n  \r\n    },\r\n    {\r\n      title: 'Twitter',\r\n      text: 'Password',\r\n      id:3\r\n  \r\n    },\r\n  ])\r\n\r\n\r\n  const Deleteitem = (id) => {\r\n    setItems(item => items.filter(el => el.id !== id));\r\n  }\r\n  \r\nconst Addnotebtn = (item)=>{\r\n  const id = Math.floor(Math.random() * 10000) + 1\r\n  const newNote = { id, ...item};\r\n  setItems([...items , newNote])\r\n\r\n  setShowform(!showform)\r\n  console.log(newNote, id);\r\n}\r\n\r\nconst Addnotebtncancel = (e)=>{\r\n  setShowform(!showform)\r\n  \r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div className={`${Darkmode && 'dark-mode'}`}>\r\n    <div className=\"App\">\r\n    <Header onAdd={() => setShowform(!showform)}  togglemode={setDarkmode}/>\r\n  {showform  && <Addnotes onAdd={Addnotebtn} onadd={Addnotebtncancel}/>}\r\n\r\n  <Herodiv/>\r\n   <Notelist key={items.id} items={items} onDelete={Deleteitem}/>\r\n   </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}